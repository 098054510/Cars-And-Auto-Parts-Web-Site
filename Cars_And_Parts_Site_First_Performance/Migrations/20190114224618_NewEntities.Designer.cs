// <auto-generated />
using System;
using Cars_And_Parts_Site_First_Performance.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Cars_And_Parts_Site_First_Performance.Migrations
{
    [DbContext(typeof(Cars_And_Parts_Site_First_PerformanceContext))]
    [Migration("20190114224618_NewEntities")]
    partial class NewEntities
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.4-rtm-31024")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Cars_And_Parts_Site_First_Performance.Models.Accessory", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("DepartmentID");

                    b.Property<string>("Name");

                    b.Property<double>("Price");

                    b.HasKey("ID");

                    b.HasIndex("DepartmentID");

                    b.ToTable("Accessories");
                });

            modelBuilder.Entity("Cars_And_Parts_Site_First_Performance.Models.Brand", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Country");

                    b.Property<int?>("DepartmentID");

                    b.Property<string>("Name");

                    b.HasKey("ID");

                    b.HasIndex("DepartmentID");

                    b.ToTable("Brands");
                });

            modelBuilder.Entity("Cars_And_Parts_Site_First_Performance.Models.DepartmentModel", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name");

                    b.HasKey("ID");

                    b.ToTable("DepartmentModel");
                });

            modelBuilder.Entity("Cars_And_Parts_Site_First_Performance.Models.Full_Stock_Car", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<double>("BasePrice");

                    b.Property<int?>("DepartmentID");

                    b.Property<string>("Model");

                    b.Property<int>("Year");

                    b.HasKey("ID");

                    b.HasIndex("DepartmentID");

                    b.ToTable("Full_Stock_Cars");
                });

            modelBuilder.Entity("Cars_And_Parts_Site_First_Performance.Models.Accessory", b =>
                {
                    b.HasOne("Cars_And_Parts_Site_First_Performance.Models.DepartmentModel", "Department")
                        .WithMany("Accessories")
                        .HasForeignKey("DepartmentID");
                });

            modelBuilder.Entity("Cars_And_Parts_Site_First_Performance.Models.Brand", b =>
                {
                    b.HasOne("Cars_And_Parts_Site_First_Performance.Models.DepartmentModel", "Department")
                        .WithMany("Brand")
                        .HasForeignKey("DepartmentID");
                });

            modelBuilder.Entity("Cars_And_Parts_Site_First_Performance.Models.Full_Stock_Car", b =>
                {
                    b.HasOne("Cars_And_Parts_Site_First_Performance.Models.DepartmentModel", "Department")
                        .WithMany("Full_Stock_Cars")
                        .HasForeignKey("DepartmentID");
                });
#pragma warning restore 612, 618
        }
    }
}
